services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: lims
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 5

  postgrest:
    image: postgrest/postgrest:latest
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgres://postgrest_authenticator:postgrestpass@db:5432/lims
      PGRST_DB_SCHEMAS: "app_core,app_security,app_provenance,public"
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_DB_PRE_REQUEST: app_security.pre_request
      PGRST_JWT_SECRET: "dev_jwt_secret_change_me_which_is_at_least_32_characters"
      PGRST_OPENAPI_SERVER_PROXY_URI: "http://localhost:${POSTGREST_HOST_PORT:-6000}"
      PGRST_OPENAPI_MODE: "ignore-privileges"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${POSTGREST_HOST_PORT:-6000}:3000"

  postgraphile:
    build:
      context: ./ops/postgraphile
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - "${POSTGRAPHILE_HOST_PORT:-6001}:3001"
    environment:
      POSTGRAPHILE_DB_URI: postgres://postgraphile_authenticator:postgraphilepass@db:5432/lims
      POSTGRAPHILE_SCHEMAS: "app_core,app_provenance"
      POSTGRAPHILE_DEFAULT_ROLE: web_anon
      POSTGRAPHILE_JWT_SECRET: "dev_jwt_secret_change_me_which_is_at_least_32_characters"
      POSTGRAPHILE_JWT_AUD: "lims-dev"
      POSTGRAPHILE_PORT: "3001"
      POSTGRAPHILE_OWNER_CONNECTION: postgres://postgres:postgres@db:5432/lims

  ui:
    build: ./ui
    environment:
      VITE_POSTGREST_URL: http://postgrest:3000
    depends_on:
      - postgrest
    ports:
      - "5173:5173"
    command: ["sh", "-c", "npm install && npm run dev -- --host 0.0.0.0 --port 5173"]
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER:-.}/ui:/app
      - ui_node_modules:/app/node_modules

  dev:
    image: mcr.microsoft.com/devcontainers/base:ubuntu

    volumes:
      - ./:/workspace
    command: sleep infinity
    depends_on:
      - db
      - postgrest
      - postgraphile

  dbmate:
    image: amacneil/dbmate:2.13
    entrypoint: ["dbmate"]
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/lims?sslmode=disable
      DBMATE_MIGRATIONS_DIR: /db/migrations
      DBMATE_SCHEMA_FILE: /db/schema.sql
    volumes:
      - ./ops/db:/db
    working_dir: /db
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata:
  ui_node_modules:
