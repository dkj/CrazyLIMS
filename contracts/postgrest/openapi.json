{
  "code": "PGRST002",
  "details": null,
  "hint": null,
  "message": "Could not query the database for the schema cache. Retrying."
}
{
  "swagger": "2.0",
  "info": {
    "description": "This is a dynamic API generated by PostgREST",
    "title": "PostgREST API",
    "version": "13.0.7"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json",
    "application/vnd.pgrst.object+json;nulls=stripped",
    "application/vnd.pgrst.object+json",
    "text/csv"
  ],
  "produces": [
    "application/json",
    "application/vnd.pgrst.object+json;nulls=stripped",
    "application/vnd.pgrst.object+json",
    "text/csv"
  ],
  "paths": {
    "/": {
      "get": {
        "produces": [
          "application/openapi+json",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "OpenAPI description (this document)",
        "tags": [
          "Introspection"
        ]
      }
    },
    "/samples": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.samples.id"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.external_id"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.name"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.sample_type"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.project_code"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.parent_id"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.created_by"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.created_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/samples"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "tags": [
          "samples"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.samples"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "samples"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.samples.id"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.external_id"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.name"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.sample_type"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.project_code"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.parent_id"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.created_by"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.created_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "samples"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.samples.id"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.external_id"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.name"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.sample_type"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.project_code"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.parent_id"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.created_by"
          },
          {
            "$ref": "#/parameters/rowFilter.samples.created_at"
          },
          {
            "$ref": "#/parameters/body.samples"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "samples"
        ]
      }
    },
    "/users": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.users.id"
          },
          {
            "$ref": "#/parameters/rowFilter.users.email"
          },
          {
            "$ref": "#/parameters/rowFilter.users.full_name"
          },
          {
            "$ref": "#/parameters/rowFilter.users.role"
          },
          {
            "$ref": "#/parameters/rowFilter.users.created_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/users"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "tags": [
          "users"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.users"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "users"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.users.id"
          },
          {
            "$ref": "#/parameters/rowFilter.users.email"
          },
          {
            "$ref": "#/parameters/rowFilter.users.full_name"
          },
          {
            "$ref": "#/parameters/rowFilter.users.role"
          },
          {
            "$ref": "#/parameters/rowFilter.users.created_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "users"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.users.id"
          },
          {
            "$ref": "#/parameters/rowFilter.users.email"
          },
          {
            "$ref": "#/parameters/rowFilter.users.full_name"
          },
          {
            "$ref": "#/parameters/rowFilter.users.role"
          },
          {
            "$ref": "#/parameters/rowFilter.users.created_at"
          },
          {
            "$ref": "#/parameters/body.users"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/audit_log": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.audit_log.id"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.ts"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.actor"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.action"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.table_name"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.row_pk"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.diff"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/audit_log"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "tags": [
          "audit_log"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.audit_log"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "audit_log"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.audit_log.id"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.ts"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.actor"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.action"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.table_name"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.row_pk"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.diff"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "audit_log"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.audit_log.id"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.ts"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.actor"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.action"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.table_name"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.row_pk"
          },
          {
            "$ref": "#/parameters/rowFilter.audit_log.diff"
          },
          {
            "$ref": "#/parameters/body.audit_log"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "audit_log"
        ]
      }
    }
  },
  "definitions": {
    "samples": {
      "required": [
        "id",
        "name",
        "sample_type",
        "created_at"
      ],
      "properties": {
        "id": {
          "default": "gen_random_uuid()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "external_id": {
          "format": "text",
          "type": "string"
        },
        "name": {
          "format": "text",
          "type": "string"
        },
        "sample_type": {
          "format": "text",
          "type": "string"
        },
        "project_code": {
          "format": "text",
          "type": "string"
        },
        "parent_id": {
          "description": "Note:\nThis is a Foreign Key to `samples.id`.<fk table='samples' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "created_by": {
          "description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
          "format": "uuid",
          "type": "string"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "users": {
      "required": [
        "id",
        "email",
        "full_name",
        "role",
        "created_at"
      ],
      "properties": {
        "id": {
          "default": "gen_random_uuid()",
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "uuid",
          "type": "string"
        },
        "email": {
          "format": "text",
          "type": "string"
        },
        "full_name": {
          "format": "text",
          "type": "string"
        },
        "role": {
          "format": "text",
          "type": "string"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "audit_log": {
      "required": [
        "id",
        "ts",
        "action",
        "table_name"
      ],
      "properties": {
        "id": {
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "bigint",
          "type": "integer"
        },
        "ts": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "actor": {
          "format": "text",
          "type": "string"
        },
        "action": {
          "format": "text",
          "type": "string"
        },
        "table_name": {
          "format": "text",
          "type": "string"
        },
        "row_pk": {
          "format": "text",
          "type": "string"
        },
        "diff": {
          "format": "jsonb"
        }
      },
      "type": "object"
    }
  },
  "parameters": {
    "preferParams": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "preferReturn": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "return=representation",
        "return=minimal",
        "return=none"
      ],
      "in": "header",
      "type": "string"
    },
    "preferCount": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "count=none"
      ],
      "in": "header",
      "type": "string"
    },
    "preferPost": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "return=representation",
        "return=minimal",
        "return=none",
        "resolution=ignore-duplicates",
        "resolution=merge-duplicates"
      ],
      "in": "header",
      "type": "string"
    },
    "select": {
      "name": "select",
      "description": "Filtering Columns",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "on_conflict": {
      "name": "on_conflict",
      "description": "On Conflict",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "order": {
      "name": "order",
      "description": "Ordering",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "range": {
      "name": "Range",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "rangeUnit": {
      "name": "Range-Unit",
      "description": "Limiting and Pagination",
      "required": false,
      "default": "items",
      "in": "header",
      "type": "string"
    },
    "offset": {
      "name": "offset",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "limit": {
      "name": "limit",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.samples": {
      "name": "samples",
      "description": "samples",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/samples"
      }
    },
    "rowFilter.samples.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.samples.external_id": {
      "name": "external_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.samples.name": {
      "name": "name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.samples.sample_type": {
      "name": "sample_type",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.samples.project_code": {
      "name": "project_code",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.samples.parent_id": {
      "name": "parent_id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.samples.created_by": {
      "name": "created_by",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.samples.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.users": {
      "name": "users",
      "description": "users",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/users"
      }
    },
    "rowFilter.users.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.users.email": {
      "name": "email",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.users.full_name": {
      "name": "full_name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.users.role": {
      "name": "role",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.users.created_at": {
      "name": "created_at",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.audit_log": {
      "name": "audit_log",
      "description": "audit_log",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/audit_log"
      }
    },
    "rowFilter.audit_log.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.audit_log.ts": {
      "name": "ts",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.audit_log.actor": {
      "name": "actor",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.audit_log.action": {
      "name": "action",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.audit_log.table_name": {
      "name": "table_name",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.audit_log.row_pk": {
      "name": "row_pk",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.audit_log.diff": {
      "name": "diff",
      "required": false,
      "in": "query",
      "type": "string"
    }
  },
  "externalDocs": {
    "description": "PostgREST Documentation",
    "url": "https://postgrest.org/en/v13/references/api.html"
  }
}
